exit
JSON.parse(response)
a[:server]
a
a.parse
a.params
a
Ñ„
JSON.parse(a)
a.class
a
JSON.parse(a)
JSON.parse(a)['main']
a = Faraday.get(OPENWEATHERMAP_API_URL, options).headers
a = Faraday.get(OPENWEATHERMAP_API_URL, options).headers.class
Faraday.get(OPENWEATHERMAP_API_URL, options).headers.class
Faraday.get(OPENWEATHERMAP_API_URL, options).headers
Faraday.get(OPENWEATHERMAP_API_URL, options)
JSON.parse(response)['main']
JSON.parse(response)['main']['temp'].to_f
response
exit
dir_path_thing = File.join(Dir.pwd, 'data').sub('/lib', '')
dir_path_thing = File.join(Dir.pwd, 'lib').sub('/lib', '')
dir_path_thing = File.join(Dir.pwd, 'lib').sub('/data', '')
dir_path_thing = File.join(Dir.pwd, 'data').sub('', '')
dir_path_thing = File.join(Dir.pwd, 'data').sub('/', '')
dir_path_thing = File.join(Dir.pwd, 'lib').sub('/lib', '')
exit
n
path
exit
path
exit
clothes_collection = Wardrobe::Checkroom.read_from_dir_files("#{__dir__}./data/*.txt")
clothes_collection = Wardrobe::Checkroom.read_from_dir_files("#{__dir__}../data/*.txt")
clothes_collection = Wardrobe::Checkroom.read_from_dir_files("#{__dir__}/data/*.txt")
current_temperature
exit
Dotenv.load('../.env')['API_KEY']
Dotenv.load('./.env')['API_KEY']
Dotenv.load('./env')['API_KEY']
Dotenv.load('.../env')['API_KEY']
Dotenv.load('/./env')['API_KEY']
Dotenv.load('/../env')['API_KEY']
Dotenv.load('../env')['API_KEY']
Dotenv.load('./env')['API_KEY']
Dotenv.load('.env')['API_KEY']
options
